name: Deploy Drupal Cloud

# Required GitHub Secrets:
# - DEPLOY_SSH_KEY: Private SSH key for deployment
# - SERVER_IP: IP address of the deployment server
# - SERVER_USER: SSH user for deployment (e.g., root, ubuntu)
# - PROJECT_PATH: Full path to project directory (e.g., /home/drupalcloud/drupal-cloud-project)  
# - PROJECT_USER: User that owns the project files (e.g., drupalcloud)

on:
  push:
    branches: [main]
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - '.gitignore'
      - '.ddev/**'

  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get commit info
        id: commit
        run: |
          echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "commit_message=$(git log -1 --pretty=%s)" >> $GITHUB_OUTPUT

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_SSH_KEY }}" > ~/.ssh/server_deploy
          chmod 600 ~/.ssh/server_deploy
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Deploy on server using Git Pull
        run: |
          ssh -i ~/.ssh/server_deploy ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "
            set -e

            echo '🚀 Starting Drupal deployment...'
            echo '📊 Commit: ${{ steps.commit.outputs.short_sha }}'
            echo '💬 Message: ${{ steps.commit.outputs.commit_message }}'

            cd ${{ secrets.PROJECT_PATH }}

            echo '📥 Pulling latest code from repository...'
            # Configure git to handle divergent branches and ensure clean pull
            sudo -u ${{ secrets.PROJECT_USER }} git config pull.rebase false
            sudo -u ${{ secrets.PROJECT_USER }} git fetch origin
            sudo -u ${{ secrets.PROJECT_USER }} git reset --hard origin/main
            echo '✅ Repository updated to latest version'

            echo '📦 Installing/updating Composer dependencies...'
            sudo -u ${{ secrets.PROJECT_USER }} composer install --no-dev --optimize-autoloader --no-interaction

            echo '🧹 Clearing Drupal caches...'
            sudo -u ${{ secrets.PROJECT_USER }} ${{ secrets.PROJECT_PATH }}/vendor/bin/drush cache:rebuild || echo 'Warning: Cache rebuild failed, continuing...'

            echo '✅ Deployment complete!'
          "


      - name: Summary
        run: |
          echo "🎉 Deployment completed!"
          echo "🔍 Commit: ${{ steps.commit.outputs.short_sha }} - ${{ steps.commit.outputs.commit_message }}"
          echo "📝 Drupal code deployed and caches cleared"
